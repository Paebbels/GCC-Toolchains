name: GCC Toolchain for AArch64 with NewLib

on: [ push ]

env:
  BUILD_DIR: build

jobs:
  toolchain:
    name: binutils
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - { arch: aarch64, binutils: 2.36.1, gcc: 11.1.0, newlib: 4.1.0 }

    env:
      TARGET:              ${{ matrix.arch }}-none-elf
      PREFIX:              /opt/cross

      BINUTILS_SOURCE_DIR: binutils-${{ matrix.binutils }}
      BINUTILS_BUILD_DIR:  build/binutils
      
      GCC_SOURCE_DIR:      gcc-${{ matrix.gcc }}
      GCC_BUILD_DIR:       build/gcc
      
      NEWLIB_SOURCE_DIR:   newlib-${{ matrix.newlib }}
      NEWLIB_BUILD_DIR:    build/newlib

    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get install libgmp-dev libmpfr-dev libmpc-dev libisl-dev
    
      - name: Download binutils ${{ matrix.binutils }}
        run: curl https://mirrors.syringanetworks.net/gnu/binutils/binutils-${{ matrix.binutils }}.tar.gz --output binutils-${{ matrix.binutils }}.tar.gz
      - name: Download GCC ${{ env.GCC_VERSION }}
        run: curl https://ftp.mpi-inf.mpg.de/mirrors/gnu/mirror/gcc.gnu.org/pub/gcc/releases/gcc-${{ matrix.gcc }}/gcc-${{ matrix.gcc }}.tar.gz --output gcc-${{ matrix.gcc }}.tar.gz
      - name: Download newlib ${{ env.NEWLIB_VERSION }}
        run: curl ftp://sourceware.org/pub/newlib/newlib-${{ matrix.newlib }}.tar.gz --output newlib-${{ matrix.newlib }}.tar.gz

      - name: Extract files
        run: |
          tar -xzf binutils-${{ matrix.binutils }}.tar.gz
          tar -xzf gcc-${{ matrix.gcc }}.tar.gz
          tar -xzf newlib-${{ matrix.newlib }}.tar.gz
          ls -lAh

      - name: Make directory structure
        run: |
          mkdir -p ${PREFIX}
          mkdir -p ${BINUTILS_BUILD_DIR}
          mkdir -p ${GCC_BUILD_DIR}
          mkdir -p ${NEWLIB_BUILD_DIR}

      - name: Configure binutils ${{ matrix.binutils }}
        run: |
          cd ${BINUTILS_BUILD_DIR}
          ../../${BINUTILS_SOURCE_DIR}/configure --target=${TARGET} --prefix=${PREFIX} --enable-plugins

      - name: Build binutils ${{ matrix.binutils }}
        run: |
          cd ${BINUTILS_BUILD_DIR}
          make -j2

      - name: Install binutils ${{ matrix.binutils }}
        run: |
          cd ${BINUTILS_BUILD_DIR}
          make install

      - name: Configure GCC ${{ matrix.gcc }} (bootstrap)
        run: |
          cd ${GCC_BUILD_DIR}
          ../../${GCC_SOURCE_DIR}/configure --target=${TARGET} --prefix=${PREFIX} --enable-languages=c --without-headers --disable-shared --with-newlib --with-gnu-as --with-gnu-ld

      - name: Build GCC ${{ matrix.gcc }} (bootstrap)
        run: |
          cd ${GCC_BUILD_DIR}
          make -j2 all-gcc

      - name: Install GCC ${{ matrix.gcc }} (bootstrap)
        run: |
          cd ${GCC_BUILD_DIR}
          make install-gcc

      - name: Configure newlib ${{ matrix.newlib }}
        run: |
          cd ${GCC_BUILD_DIR}
          ../../${NEWLIB_SOURCE_DIR}/configure --target=${TARGET} --prefix=${PREFIX}

      - name: Build newlib ${{ matrix.newlib }}
        run: |
          cd ${NEWLIB_BUILD_DIR}
          make -j2 all

      - name: Install newlib ${{ matrix.newlib }}
        run: |
          cd ${NEWLIB_BUILD_DIR}
          make install

      - name: Configure GCC ${{ matrix.gcc }}
        run: |
          cd ${GCC_BUILD_DIR}
          ../../${GCC_SOURCE_DIR}/configure --target=${TARGET} --prefix=${PREFIX} --enable-languages=c,c++ --with-newlib --disable-shared --with-gnu-as --with-gnu-ld --disable-shared --disable-libssp

      - name: Build GCC ${{ matrix.gcc }}
        run: |
          cd ${GCC_BUILD_DIR}
          make -j2 all

      - name: Install GCC ${{ matrix.gcc }}
        run: |
          cd ${GCC_BUILD_DIR}
          make install
